{"version":3,"sources":["src/PivotTableUI.jsx"],"names":["DraggableAttribute","props","state","open","top","left","filterText","value","valueFilter","removeValuesFromFilter","name","addValuesToFilter","x","toLowerCase","trim","includes","e","stopPropagation","setValuesInFilter","Object","keys","attrValues","filter","y","showMenu","length","menuLimit","values","shown","matchesFilter","bind","sort","sorter","display","cursor","zIndex","moveFilterBoxToTop","setState","target","map","toggleValue","selectOnly","event","bodyRect","document","body","getBoundingClientRect","rect","nativeEvent","filtered","renderAttributeKey","toggleFilterBox","getFilterBox","React","Component","defaultProps","propTypes","PropTypes","string","isRequired","func","objectOf","number","bool","Dropdown","toggle","current","r","setValue","PureComponent","PivotTableUI","unusedOrder","zIndices","maxZIndex","openDropdown","initializeValueFilter","materializeInput","data","nextProps","key","nextData","materializedInput","recordsProcessed","PivotData","forEachRecord","derivedAttributes","record","push","attr","null","command","nextState","aggregators","renderAttributeValue","renderers","sorters","tableColorScaleGenerator","onChange","sendPropUpdate","$set","attribute","reduce","v","$unset","dropdown","items","classes","group","ghostClass","preventOnFilter","numValsAllowed","aggregatorName","numInputs","rendererName","rendererCell","isOpen","propUpdater","sortIcons","key_a_to_z","rowSymbol","colSymbol","next","value_a_to_z","value_z_to_a","aggregatorCell","alignItems","rowOrder","colOrder","Array","fill","n","i","vals","hiddenAttributes","hiddenFromAggregators","$splice","unusedAttrs","rows","cols","hiddenFromDragDrop","unusedLength","horizUnused","unusedOrientationCutoff","unusedAttrsCell","makeDnDCell","order","colAttrs","colAttrsCell","rowAttrs","rowAttrsCell","outputCell","className","split","join","assign","PivotTable","arrayOf"],"mappings":"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","file":"PivotTableUI.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport {PivotData, sortAs, getSort} from './Utilities';\nimport PivotTable from './PivotTable';\nimport Sortable from 'react-sortablejs';\nimport Draggable from 'react-draggable';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport IconButton from '@material-ui/core/IconButton'\nimport classnames from 'classnames'\n\n/* eslint-disable react/prop-types */\n// eslint can't see inherited propTypes!\n\nexport class DraggableAttribute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {open: false, top: 0, left: 0, filterText: ''};\n  }\n\n  toggleValue(value) {\n    if (value in this.props.valueFilter) {\n      this.props.removeValuesFromFilter(this.props.name, [value]);\n    } else {\n      this.props.addValuesToFilter(this.props.name, [value]);\n    }\n  }\n\n  matchesFilter(x) {\n    return x\n      .toLowerCase()\n      .trim()\n      .includes(this.state.filterText.toLowerCase().trim());\n  }\n\n  selectOnly(e, value) {\n    e.stopPropagation();\n    this.props.setValuesInFilter(\n      this.props.name,\n      Object.keys(this.props.attrValues).filter(y => y !== value)\n    );\n  }\n\n  getFilterBox() {\n    const showMenu =\n      Object.keys(this.props.attrValues).length < this.props.menuLimit;\n\n    const values = Object.keys(this.props.attrValues);\n    const shown = values\n      .filter(this.matchesFilter.bind(this))\n      .sort(this.props.sorter);\n\n    return (\n      <Draggable handle=\".pvtDragHandle\">\n        <div\n          className=\"pvtFilterBox\"\n          style={{\n            display: 'block',\n            cursor: 'initial',\n            zIndex: this.props.zIndex,\n            top: this.state.top + 'px',\n            left: this.state.left + 'px',\n          }}\n          onClick={() => this.props.moveFilterBoxToTop(this.props.name)}\n        >\n          <a onClick={() => this.setState({open: false})} className=\"pvtCloseX\">\n            ×\n          </a>\n          <span className=\"pvtDragHandle\">☰</span>\n          <h4>{this.props.name}</h4>\n\n          {showMenu || <p>(too many values to show)</p>}\n\n          {showMenu && (\n            <p>\n              <input\n                type=\"text\"\n                placeholder=\"Filter values\"\n                className=\"pvtSearch\"\n                value={this.state.filterText}\n                onChange={e =>\n                  this.setState({\n                    filterText: e.target.value,\n                  })\n                }\n              />\n              <br />\n              <a\n                role=\"button\"\n                className=\"pvtButton\"\n                onClick={() =>\n                  this.props.removeValuesFromFilter(\n                    this.props.name,\n                    Object.keys(this.props.attrValues).filter(\n                      this.matchesFilter.bind(this)\n                    )\n                  )\n                }\n              >\n                Select {values.length === shown.length ? 'All' : shown.length}\n              </a>{' '}\n              <a\n                role=\"button\"\n                className=\"pvtButton\"\n                onClick={() =>\n                  this.props.addValuesToFilter(\n                    this.props.name,\n                    Object.keys(this.props.attrValues).filter(\n                      this.matchesFilter.bind(this)\n                    )\n                  )\n                }\n              >\n                Deselect {values.length === shown.length ? 'All' : shown.length}\n              </a>\n            </p>\n          )}\n\n          {showMenu && (\n            <div className=\"pvtCheckContainer\">\n              {shown.map(x => (\n                <p\n                  key={x}\n                  onClick={() => this.toggleValue(x)}\n                  className={x in this.props.valueFilter ? '' : 'selected'}\n                >\n                  <a className=\"pvtOnly\" onClick={e => this.selectOnly(e, x)}>\n                    only\n                  </a>\n                  <a className=\"pvtOnlySpacer\">&nbsp;</a>\n\n                  {x === '' ? <em>null</em> : x}\n                </p>\n              ))}\n            </div>\n          )}\n        </div>\n      </Draggable>\n    );\n  }\n\n  toggleFilterBox(event) {\n    const bodyRect = document.body.getBoundingClientRect();\n    const rect = event.nativeEvent.target.getBoundingClientRect();\n    this.setState({\n      open: !this.state.open,\n      top: 10 + rect.top - bodyRect.top,\n      left: 10 + rect.left - bodyRect.left,\n    });\n    this.props.moveFilterBoxToTop(this.props.name);\n  }\n\n  render() {\n    const filtered =\n      Object.keys(this.props.valueFilter).length !== 0\n        ? 'pvtFilteredAttribute'\n        : '';\n    return (\n      <li data-id={this.props.name}>\n        <span className={'pvtAttr ' + filtered}>\n          <span className='text'>\n            {this.props.renderAttributeKey(this.props.name)}\n          </span>\n          <IconButton\n            className=\"pvtTriangle\"\n            onClick={this.toggleFilterBox.bind(this)}\n          >\n            <SettingsIcon />\n          </IconButton>\n        </span>\n\n        {this.state.open ? this.getFilterBox() : null}\n      </li>\n    );\n  }\n}\n\nDraggableAttribute.defaultProps = {\n  valueFilter: {},\n};\n\nDraggableAttribute.propTypes = {\n  name: PropTypes.string.isRequired,\n  addValuesToFilter: PropTypes.func.isRequired,\n  removeValuesFromFilter: PropTypes.func.isRequired,\n  attrValues: PropTypes.objectOf(PropTypes.number).isRequired,\n  valueFilter: PropTypes.objectOf(PropTypes.bool),\n  moveFilterBoxToTop: PropTypes.func.isRequired,\n  sorter: PropTypes.func.isRequired,\n  menuLimit: PropTypes.number,\n  zIndex: PropTypes.number,\n};\n\nexport class Dropdown extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"pvtDropdown\" style={{zIndex: this.props.zIndex}}>\n        <div\n          onClick={e => {\n            e.stopPropagation();\n            this.props.toggle();\n          }}\n          className={\n            'pvtDropdownValue pvtDropdownCurrent ' +\n            (this.props.open ? 'pvtDropdownCurrentOpen' : '')\n          }\n          role=\"button\"\n        >\n          <IconButton className={classnames(\"pvtDropdownIcon\", { open: this.props.open })}>\n            <ExpandMoreIcon />\n          </IconButton>\n          {this.props.current\n            ? this.props.renderAttributeKey(this.props.current)\n            : <span>&nbsp;</span>\n          }\n        </div>\n\n        {this.props.open && (\n          <div className=\"pvtDropdownMenu\">\n            {this.props.values.map(r => (\n              <div\n                key={r}\n                role=\"button\"\n                onClick={e => {\n                  e.stopPropagation();\n                  this.props.toggle();\n                  this.props.setValue(r);\n                }}\n                className={\n                  'pvtDropdownValue ' +\n                  (r === this.props.current ? 'pvtDropdownActiveValue' : '')\n                }\n              >\n                {this.props.renderAttributeKey(r)}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nDropdown.defaultProps = {\n  renderAttributeKey: x => x\n}\n\nclass PivotTableUI extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unusedOrder: [],\n      zIndices: {},\n      maxZIndex: 1000,\n      openDropdown: false,\n    };\n    this.initializeValueFilter(props)\n  }\n\n  componentWillMount() {\n    this.materializeInput(this.props.data);\n  }\n\n  componentWillUpdate(nextProps) {\n    this.materializeInput(nextProps.data);\n    this.initializeValueFilter(nextProps)\n  }\n\n  initializeValueFilter(props) {\n    if (Object.keys(props.valueFilter).length === 0) {\n      if (props.data.length > 0) {\n        const keys = Object.keys(props.data[0])\n        for (const key of keys) {\n          props.valueFilter[key] = {}\n        }\n      }\n    }\n  }\n\n  materializeInput(nextData) {\n    if (this.data === nextData) {\n      return;\n    }\n    this.data = nextData;\n    const attrValues = {};\n    const materializedInput = [];\n    let recordsProcessed = 0;\n    PivotData.forEachRecord(this.data, this.props.derivedAttributes, function(\n      record\n    ) {\n      materializedInput.push(record);\n      for (const attr of Object.keys(record)) {\n        if (!(attr in attrValues)) {\n          attrValues[attr] = {};\n          if (recordsProcessed > 0) {\n            attrValues[attr].null = recordsProcessed;\n          }\n        }\n      }\n      for (const attr in attrValues) {\n        const value = attr in record ? record[attr] : 'null';\n        if (!(value in attrValues[attr])) {\n          attrValues[attr][value] = 0;\n        }\n        attrValues[attr][value]++;\n      }\n      recordsProcessed++;\n    });\n\n    this.materializedInput = materializedInput;\n    this.attrValues = attrValues;\n  }\n\n  sendPropUpdate(command) {\n    const nextState = update(this.props, command)\n\n    delete nextState.aggregators\n    delete nextState.data\n    delete nextState.derivedAttributes\n    delete nextState.renderAttributeKey\n    delete nextState.renderAttributeValue\n    delete nextState.renderers\n    delete nextState.sorters\n    delete nextState.tableColorScaleGenerator\n    delete nextState.onChange\n    \n    this.props.onChange(nextState);\n  }\n\n  propUpdater(key) {\n    return value => this.sendPropUpdate({[key]: {$set: value}});\n  }\n\n  setValuesInFilter(attribute, values) {\n    this.sendPropUpdate({\n      valueFilter: {\n        [attribute]: {\n          $set: values.reduce((r, v) => {\n            r[v] = true;\n            return r;\n          }, {}),\n        },\n      },\n    });\n  }\n\n  addValuesToFilter(attribute, values) {\n    if (attribute in this.props.valueFilter) {\n      this.sendPropUpdate({\n        valueFilter: {\n          [attribute]: values.reduce((r, v) => {\n            r[v] = {$set: true};\n            return r;\n          }, {}),\n        },\n      });\n    } else {\n      this.setValuesInFilter(attribute, values);\n    }\n  }\n\n  removeValuesFromFilter(attribute, values) {\n    this.sendPropUpdate({\n      valueFilter: {[attribute]: {$unset: values}},\n    });\n  }\n\n  moveFilterBoxToTop(attribute) {\n    this.setState(\n      update(this.state, {\n        maxZIndex: {$set: this.state.maxZIndex + 1},\n        zIndices: {[attribute]: {$set: this.state.maxZIndex + 1}},\n      })\n    );\n  }\n\n  isOpen(dropdown) {\n    return this.state.openDropdown === dropdown;\n  }\n\n  makeDnDCell(items, onChange, classes) {\n    return (\n      <Sortable\n        options={{\n          group: 'shared',\n          ghostClass: 'pvtPlaceholder',\n          filter: '.pvtFilterBox',\n          preventOnFilter: false,\n        }}\n        tag=\"td\"\n        className={classes}\n        onChange={onChange}\n      >\n        {items.map(x => (\n          <DraggableAttribute\n            name={x}\n            key={x}\n            attrValues={this.attrValues[x]}\n            valueFilter={this.props.valueFilter[x] || {}}\n            sorter={getSort(this.props.sorters, x)}\n            menuLimit={this.props.menuLimit}\n            setValuesInFilter={this.setValuesInFilter.bind(this)}\n            addValuesToFilter={this.addValuesToFilter.bind(this)}\n            moveFilterBoxToTop={this.moveFilterBoxToTop.bind(this)}\n            removeValuesFromFilter={this.removeValuesFromFilter.bind(this)}\n            zIndex={this.state.zIndices[x] || this.state.maxZIndex}\n            renderAttributeKey={this.props.renderAttributeKey || (x => x)}\n          />\n        ))}\n      </Sortable>\n    );\n  }\n\n  render() {\n    const numValsAllowed =\n      this.props.aggregators[this.props.aggregatorName]([])().numInputs || 0;\n\n    const rendererName =\n      this.props.rendererName in this.props.renderers\n        ? this.props.rendererName\n        : Object.keys(this.props.renderers)[0];\n\n    const rendererCell = (\n      <td className=\"pvtRenderers\">\n        <Dropdown\n          current={rendererName}\n          values={Object.keys(this.props.renderers)}\n          open={this.isOpen('renderer')}\n          zIndex={this.isOpen('renderer') ? this.state.maxZIndex + 1 : 1}\n          toggle={() =>\n            this.setState({\n              openDropdown: this.isOpen('renderer') ? false : 'renderer',\n            })\n          }\n          setValue={this.propUpdater('rendererName')}\n        />\n      </td>\n    );\n\n    const sortIcons = {\n      key_a_to_z: {\n        rowSymbol: '↕',\n        colSymbol: '↔',\n        next: 'value_a_to_z',\n      },\n      value_a_to_z: {\n        rowSymbol: '↓',\n        colSymbol: '→',\n        next: 'value_z_to_a',\n      },\n      value_z_to_a: {rowSymbol: '↑', colSymbol: '←', next: 'key_a_to_z'},\n    };\n\n    const aggregatorCell = (\n      <td className=\"pvtVals\">\n        <div style={{ alignItems: 'center', display: 'flex' }}>\n          <Dropdown\n            current={this.props.aggregatorName}\n            values={Object.keys(this.props.aggregators)}\n            open={this.isOpen('aggregators')}\n            zIndex={this.isOpen('aggregators') ? this.state.maxZIndex + 1 : 1}\n            toggle={() =>\n              this.setState({\n                openDropdown: this.isOpen('aggregators') ? false : 'aggregators',\n              })\n            }\n            setValue={this.propUpdater('aggregatorName')}\n          />\n          <a\n            role=\"button\"\n            className=\"pvtRowOrder\"\n            onClick={() =>\n              this.propUpdater('rowOrder')(sortIcons[this.props.rowOrder].next)\n            }\n          >\n            {sortIcons[this.props.rowOrder].rowSymbol}\n          </a>\n          <a\n            role=\"button\"\n            className=\"pvtColOrder\"\n            onClick={() =>\n              this.propUpdater('colOrder')(sortIcons[this.props.colOrder].next)\n            }\n          >\n            {sortIcons[this.props.colOrder].colSymbol}\n          </a>\n        </div>\n        {new Array(numValsAllowed).fill().map((n, i) => [\n          <Dropdown\n            key={i}\n            current={this.props.vals[i]}\n            values={Object.keys(this.attrValues).filter(\n              e =>\n                !this.props.hiddenAttributes.includes(e) &&\n                !this.props.hiddenFromAggregators.includes(e)\n            )}\n            open={this.isOpen(`val${i}`)}\n            zIndex={this.isOpen(`val${i}`) ? this.state.maxZIndex + 1 : 1}\n            toggle={() =>\n              this.setState({\n                openDropdown: this.isOpen(`val${i}`) ? false : `val${i}`,\n              })\n            }\n            setValue={value =>\n              this.sendPropUpdate({\n                vals: {$splice: [[i, 1, value]]},\n              })\n            }\n            renderAttributeKey={this.props.renderAttributeKey}\n          />,\n          i + 1 !== numValsAllowed ? <br key={`br${i}`} /> : null,\n        ])}\n      </td>\n    );\n\n    const unusedAttrs = Object.keys(this.attrValues)\n      .filter(\n        e =>\n          !this.props.rows.includes(e) &&\n          !this.props.cols.includes(e) &&\n          !this.props.hiddenAttributes.includes(e) &&\n          !this.props.hiddenFromDragDrop.includes(e)\n      )\n      .sort(sortAs(this.state.unusedOrder));\n\n    const unusedLength = unusedAttrs.reduce((r, e) => r + e.length, 0);\n    const horizUnused = unusedLength < this.props.unusedOrientationCutoff;\n\n    const unusedAttrsCell = this.makeDnDCell(\n      unusedAttrs,\n      order => this.setState({unusedOrder: order}),\n      `pvtAxisContainer pvtUnused ${\n        horizUnused ? 'pvtHorizList' : 'pvtVertList'\n      }`\n    );\n\n    const colAttrs = this.props.cols.filter(\n      e =>\n        !this.props.hiddenAttributes.includes(e) &&\n        !this.props.hiddenFromDragDrop.includes(e)\n    );\n\n    const colAttrsCell = this.makeDnDCell(\n      colAttrs,\n      this.propUpdater('cols'),\n      'pvtAxisContainer pvtHorizList pvtCols'\n    );\n\n    const rowAttrs = this.props.rows.filter(\n      e =>\n        !this.props.hiddenAttributes.includes(e) &&\n        !this.props.hiddenFromDragDrop.includes(e)\n    );\n    const rowAttrsCell = this.makeDnDCell(\n      rowAttrs,\n      this.propUpdater('rows'),\n      'pvtAxisContainer pvtVertList pvtRows'\n    );\n    const outputCell = (\n      <td className=\"pvtOutput\">\n        <PivotTable\n          {...update(this.props, {\n            data: {$set: this.materializedInput},\n          })}\n        />\n      </td>\n    );\n\n    let className = this.props.className\n    if (className && className.length > 0) {\n      className = className.split('\\\\s+')\n    }\n    else {\n      className = []\n    }\n    className.push('pvtUi')\n    className = className.join(' ')\n\n    if (horizUnused) {\n      return (\n        <table className={className}>\n          <tbody onClick={() => this.setState({openDropdown: false})}>\n            <tr>\n              {rendererCell}\n              {unusedAttrsCell}\n            </tr>\n            <tr>\n              {aggregatorCell}\n              {colAttrsCell}\n            </tr>\n            <tr>\n              {rowAttrsCell}\n              {outputCell}\n            </tr>\n          </tbody>\n        </table>\n      );\n    }\n\n    return (\n      <table className={className}>\n        <tbody onClick={() => this.setState({openDropdown: false})}>\n          <tr>\n            {rendererCell}\n            {aggregatorCell}\n            {colAttrsCell}\n          </tr>\n          <tr>\n            {unusedAttrsCell}\n            {rowAttrsCell}\n            {outputCell}\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPivotTableUI.propTypes = Object.assign({}, PivotTable.propTypes, {\n  onChange: PropTypes.func.isRequired,\n  hiddenAttributes: PropTypes.arrayOf(PropTypes.string),\n  hiddenFromAggregators: PropTypes.arrayOf(PropTypes.string),\n  hiddenFromDragDrop: PropTypes.arrayOf(PropTypes.string),\n  unusedOrientationCutoff: PropTypes.number,\n  menuLimit: PropTypes.number,\n});\n\nPivotTableUI.defaultProps = Object.assign({}, PivotTable.defaultProps, {\n  hiddenAttributes: [],\n  hiddenFromAggregators: [],\n  hiddenFromDragDrop: [],\n  unusedOrientationCutoff: 85,\n  menuLimit: 500,\n});\n\nexport default PivotTableUI;\n"]}